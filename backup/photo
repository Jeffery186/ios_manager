Positioned(
            top: MediaQuery.of(context).padding.top + 15,
            width: MediaQuery.of(context).size.width,
            child: Center(
              child: NoResizeText(
                "${currentIndex + 1}/${widget.images.length}",
                style: TextStyle(fontSize: 16, color: themeData?.itemFontColor),
              ),
            ),
          ),
          Positioned(
            right: 10,
            top: MediaQuery.of(context).padding.top,
            child: IconButton(
              icon: Icon(
                Icons.close,
                size: 25,
                color: themeData?.topNavIconColor,
              ),
              onPressed: () {
                MixUtils.safePop(context);
              },
            ),
          ),

   // Positioned(
          //   right: 10,
          //   top: MediaQuery.of(context).padding.top,
          //   child: IconButton(
          //     icon: Icon(
          //       Icons.close,
          //       size: 25,
          //       color: themeData?.topNavIconColor,
          //     ),
          //     onPressed: () {
          //       MixUtils.safePop(context);
          //     },
          //   ),
          // ),


           PhotoViewGallery.builder(
               scrollPhysics: const BouncingScrollPhysics(),
                builder: (BuildContext context, int index) {
                  File img = File(widget.images[index]);
                  return PhotoViewGalleryPageOptions(
                    imageProvider: FileImage(img),
                  );
                },
                itemCount: widget.images.length,
                loadingBuilder: (context, event) {
                  return loadingIndicator(context, _themeProvider);
                },
                backgroundDecoration: BoxDecoration(
                  color: themeData?.scaffoldBackgroundColor,
                ),
                pageController: controller,
                enableRotation: true,
                onPageChanged: (index) {
                  setState(() {
                    currentIndex = index;
                  });
                },
              ),


              Container(
              width: MediaQuery.of(context).size.width,
              child: Row(
                mainAxisAlignment: MainAxisAlignment.center,
                children: <Widget>[
                  NoResizeText(
                    "${currentIndex + 1}/${widget.images.length}",
                    style: TextStyle(
                        fontSize: 16, color: themeData?.itemFontColor),
                  ),
                  Expanded(
                    child: Align(
                      alignment: Alignment.centerRight,
                      child: IconButton(
                        icon: Icon(
                          Icons.close,
                          size: 25,
                          color: themeData?.topNavIconColor,
                        ),
                        onPressed: () {
                          MixUtils.safePop(context);
                        },
                      ),
                    ),
                  )
                ],
              ),
            ),